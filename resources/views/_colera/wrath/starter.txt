Route

Route
Route::get('/wrath', ['uses' => 'WrathController@wrath', 'as' => 'fury.migration']);



---
app/Providers/AuthServiceProvider.php



namespace App\Providers;
use App\User;
use App\Post;
use App\Permission;

use Illuminate\Support\Facades\Gate;
use Illuminate\Foundation\Support\Providers\AuthServiceProvider as ServiceProvider;





    public function boot()
    {

        $this->registerPolicies();

        Gate::define('check_user', function(User $user, Post $post){
            return $user->id == $post->user_id;
        });

        $permissions = \App\ACL\Permission::with('roles')->get(); 

        foreach ($permissions as $permission) { // creates (looping) dinamicly all the Gates with all the permissions name instead creating a new Gate method to each new permission created
            // Gate::define($permission->name, function(\App\ACL\User $user) use($permission){
            Gate::define($permission->name, function() use($permission){
               $user = \Auth::user(); //gets the user manually sinces the import ABOVE was broken 
               $user = \App\ACL\User::find($user->id);
                return $user->hasPermission($permission); // model User
            });
        }

        // isAdm?
        // Gate::before(function(User $user, $ability){
        
        Gate::before(function($ability){
            $user = \Auth::user(); //gets the user manually sinces the import ABOVE was broken
            $user = \App\ACL\User::find($user->id);
            if($user->hasAnyRoles('adm')){
                return true;
            }
            
        });


    }













ROUTES

// -----------------------------------------------wrath-----------------------------------------------//
Route::get('/wrath', function () {
return view('_colera.wrath.index');
});
Route::get('/wrath/migration', ['uses' => 'FuryController@migration', 'as' => 'wrath.migration']);
Route::get('/wrath/generate/{id}', ['uses' => 'FuryController@generate', 'as' => 'wrath.generate']);
Route::post('/wrath/create', ['uses' => 'FuryController@create', 'as' => 'wrath.create']);

Route::get('/wrath/dashboard', ['uses' => 'WrathController@dashboard', 'as' => 'wrath.dashboard']);

// -----------------------------------------------//wrath---------------------------------------------//



---------------------------------------

config/auth.php

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => App\User::class,
        ],

        'users' => [
            'driver' => 'database',
            'model' => App\ACL\User::class,
            'table' => 'users',
        ],
    ],

---------------------------------------


html


                        @can('see_sitFe', $user)
                                FoiiiiiiiiiiiiiiiiiiiiiASDFASDF
                        @endcan
